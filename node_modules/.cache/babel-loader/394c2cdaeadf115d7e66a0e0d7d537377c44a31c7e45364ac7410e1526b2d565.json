{"ast":null,"code":"var _jsxFileName = \"/workspace/3C-GRAFFIC/GrowthStage/src/components/Line/Linechart.js\",\n  _s = $RefreshSig$();\n// LineChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LineChart() {\n  _s();\n  const [baseData, setBaseData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function fetchAllPages(apiToken) {\n      let currentPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      let pageSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      try {\n        const response = await axios.get(`https://3c.fluxoti.com/api/v1/campaigns?paused=false&page=${currentPage}&api_token=${apiToken}&per_page=${pageSize}`);\n        const data = response.data.data;\n        console.log(`API Response Data (Page ${currentPage}):`, data);\n        const newData = data.filter(base => !base.name.startsWith('R') && !base.name.startsWith('E')).map(base => ({\n          name: base.name,\n          start_time: base.start_time,\n          end_time: base.end_time,\n          asr: parseFloat(base.asr)\n        }));\n        console.log(`Formatted Data (Page ${currentPage}):`, newData);\n        setBaseData(prevData => [...prevData, ...newData]);\n        if (response.data.meta.current_page < response.data.meta.last_page && baseData.length < 10) {\n          fetchAllPages(apiToken, currentPage + 1, pageSize);\n        } else {\n          updateChartData();\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data. Please try again later.');\n        setLoading(false);\n      }\n    }\n    const updateChartData = () => {\n      // Take only the first 10 campaigns\n      const slicedBaseData = baseData.slice(0, 10);\n      const chartData = {\n        series: [{\n          name: 'ASR',\n          data: slicedBaseData.map(item => item.asr)\n        }],\n        options: {\n          chart: {\n            height: 350,\n            type: 'line'\n          },\n          xaxis: {\n            categories: slicedBaseData.map(item => item.name)\n          },\n          title: {\n            text: 'ASR Over Bases',\n            align: 'center'\n          }\n        }\n      };\n      console.log('Chart Data:', chartData);\n      setChartData(chartData);\n      setLoading(false);\n    };\n    const apiToken = 'd0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq';\n    fetchAllPages(apiToken);\n  }, [baseData]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-3 mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ASR Over Bases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      options: chartData.options,\n      series: chartData.series,\n      type: \"line\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"v6+rViRKpZDwLwcFVkC7CDpYQ+M=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","jsxDEV","_jsxDEV","LineChart","_s","baseData","setBaseData","chartData","setChartData","loading","setLoading","error","setError","fetchAllPages","apiToken","currentPage","arguments","length","undefined","pageSize","response","get","data","console","log","newData","filter","base","name","startsWith","map","start_time","end_time","asr","parseFloat","prevData","meta","current_page","last_page","updateChartData","slicedBaseData","slice","series","item","options","chart","height","type","xaxis","categories","title","text","align","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/workspace/3C-GRAFFIC/GrowthStage/src/components/Line/Linechart.js"],"sourcesContent":["// LineChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\n\nfunction LineChart() {\n  const [baseData, setBaseData] = useState([]);\n  const [chartData, setChartData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchAllPages(apiToken, currentPage = 1, pageSize = 10) {\n      try {\n        const response = await axios.get(`https://3c.fluxoti.com/api/v1/campaigns?paused=false&page=${currentPage}&api_token=${apiToken}&per_page=${pageSize}`);\n\n        const data = response.data.data;\n\n        console.log(`API Response Data (Page ${currentPage}):`, data);\n        const newData = data\n          .filter((base) => (!base.name.startsWith('R') && !base.name.startsWith('E')))\n          .map((base) => ({\n            name: base.name,\n            start_time: base.start_time,\n            end_time: base.end_time,\n            asr: parseFloat(base.asr),\n          }));\n\n        console.log(`Formatted Data (Page ${currentPage}):`, newData);\n\n        setBaseData((prevData) => [...prevData, ...newData]);\n\n        if (response.data.meta.current_page < response.data.meta.last_page && baseData.length < 10) {\n          fetchAllPages(apiToken, currentPage + 1, pageSize);\n        } else {\n          updateChartData();\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data. Please try again later.');\n        setLoading(false);\n      }\n    }\n\n    const updateChartData = () => {\n      // Take only the first 10 campaigns\n      const slicedBaseData = baseData.slice(0, 10);\n    \n      const chartData = {\n        series: [\n          { name: 'ASR', data: slicedBaseData.map((item) => item.asr) },\n        ],\n        options: {\n          chart: {\n            height: 350,\n            type: 'line',\n          },\n          xaxis: {\n            categories: slicedBaseData.map((item) => item.name),\n          },\n          title: {\n            text: 'ASR Over Bases',\n            align: 'center',\n          },\n        },\n      };\n    \n      console.log('Chart Data:', chartData);\n    \n      setChartData(chartData);\n      setLoading(false);\n    };\n    const apiToken = 'd0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq';\n    fetchAllPages(apiToken);\n  }, [baseData]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className='container-fluid mt-3 mb-3'>\n      <h2>ASR Over Bases</h2>\n      <Chart\n        options={chartData.options}\n        series={chartData.series}\n        type='line'\n        height={350}\n      />\n    </div>\n  );\n}\n\nexport default LineChart;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,eAAee,aAAaA,CAACC,QAAQ,EAAkC;MAAA,IAAhCC,WAAW,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;MAAA,IAAEG,QAAQ,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;MACnE,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAE,6DAA4DN,WAAY,cAAaD,QAAS,aAAYK,QAAS,EAAC,CAAC;QAEvJ,MAAMG,IAAI,GAAGF,QAAQ,CAACE,IAAI,CAACA,IAAI;QAE/BC,OAAO,CAACC,GAAG,CAAE,2BAA0BT,WAAY,IAAG,EAAEO,IAAI,CAAC;QAC7D,MAAMG,OAAO,GAAGH,IAAI,CACjBI,MAAM,CAAEC,IAAI,IAAM,CAACA,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,GAAG,CAAC,IAAI,CAACF,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,GAAG,CAAE,CAAC,CAC5EC,GAAG,CAAEH,IAAI,KAAM;UACdC,IAAI,EAAED,IAAI,CAACC,IAAI;UACfG,UAAU,EAAEJ,IAAI,CAACI,UAAU;UAC3BC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;UACvBC,GAAG,EAAEC,UAAU,CAACP,IAAI,CAACM,GAAG;QAC1B,CAAC,CAAC,CAAC;QAELV,OAAO,CAACC,GAAG,CAAE,wBAAuBT,WAAY,IAAG,EAAEU,OAAO,CAAC;QAE7DnB,WAAW,CAAE6B,QAAQ,IAAK,CAAC,GAAGA,QAAQ,EAAE,GAAGV,OAAO,CAAC,CAAC;QAEpD,IAAIL,QAAQ,CAACE,IAAI,CAACc,IAAI,CAACC,YAAY,GAAGjB,QAAQ,CAACE,IAAI,CAACc,IAAI,CAACE,SAAS,IAAIjC,QAAQ,CAACY,MAAM,GAAG,EAAE,EAAE;UAC1FJ,aAAa,CAACC,QAAQ,EAAEC,WAAW,GAAG,CAAC,EAAEI,QAAQ,CAAC;QACpD,CAAC,MAAM;UACLoB,eAAe,CAAC,CAAC;QACnB;MACF,CAAC,CAAC,OAAO5B,KAAK,EAAE;QACdY,OAAO,CAACZ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAAC,8CAA8C,CAAC;QACxDF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IAEA,MAAM6B,eAAe,GAAGA,CAAA,KAAM;MAC5B;MACA,MAAMC,cAAc,GAAGnC,QAAQ,CAACoC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MAE5C,MAAMlC,SAAS,GAAG;QAChBmC,MAAM,EAAE,CACN;UAAEd,IAAI,EAAE,KAAK;UAAEN,IAAI,EAAEkB,cAAc,CAACV,GAAG,CAAEa,IAAI,IAAKA,IAAI,CAACV,GAAG;QAAE,CAAC,CAC9D;QACDW,OAAO,EAAE;UACPC,KAAK,EAAE;YACLC,MAAM,EAAE,GAAG;YACXC,IAAI,EAAE;UACR,CAAC;UACDC,KAAK,EAAE;YACLC,UAAU,EAAET,cAAc,CAACV,GAAG,CAAEa,IAAI,IAAKA,IAAI,CAACf,IAAI;UACpD,CAAC;UACDsB,KAAK,EAAE;YACLC,IAAI,EAAE,gBAAgB;YACtBC,KAAK,EAAE;UACT;QACF;MACF,CAAC;MAED7B,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEjB,SAAS,CAAC;MAErCC,YAAY,CAACD,SAAS,CAAC;MACvBG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IACD,MAAMI,QAAQ,GAAG,8DAA8D;IAC/ED,aAAa,CAACC,QAAQ,CAAC;EACzB,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,IAAII,OAAO,EAAE;IACX,oBAAOP,OAAA;MAAAmD,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAI9C,KAAK,EAAE;IACT,oBAAOT,OAAA;MAAAmD,QAAA,EAAI1C;IAAK;MAAA2C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACvB;EAEA,oBACEvD,OAAA;IAAKwD,SAAS,EAAC,2BAA2B;IAAAL,QAAA,gBACxCnD,OAAA;MAAAmD,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBvD,OAAA,CAACF,KAAK;MACJ4C,OAAO,EAAErC,SAAS,CAACqC,OAAQ;MAC3BF,MAAM,EAAEnC,SAAS,CAACmC,MAAO;MACzBK,IAAI,EAAC,MAAM;MACXD,MAAM,EAAE;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrD,EAAA,CA1FQD,SAAS;AAAAwD,EAAA,GAATxD,SAAS;AA4FlB,eAAeA,SAAS;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}