[{"/workspace/3C-GRAFFIC/GrowthStage/src/index.js":"1","/workspace/3C-GRAFFIC/GrowthStage/src/App.js":"2","/workspace/3C-GRAFFIC/GrowthStage/src/reportWebVitals.js":"3","/workspace/3C-GRAFFIC/GrowthStage/src/components/Line/Linechart.js":"4","/workspace/3C-GRAFFIC/GrowthStage/src/components/Starttime/startime.js":"5","/workspace/3C-GRAFFIC/GrowthStage/src/components/Completion/CompletionRateChart.js":"6","/workspace/3C-GRAFFIC/GrowthStage/src/components/Pause/PausaStatusChart.js":"7","/workspace/3C-GRAFFIC/GrowthStage/src/components/Navbar/index.js":"8"},{"size":535,"mtime":1702658046000,"results":"9","hashOfConfig":"10"},{"size":690,"mtime":1703767799000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1702658046000,"results":"12","hashOfConfig":"10"},{"size":3326,"mtime":1703768458000,"results":"13","hashOfConfig":"10"},{"size":3107,"mtime":1703772759262,"results":"14","hashOfConfig":"10"},{"size":3006,"mtime":1702658046000,"results":"15","hashOfConfig":"10"},{"size":2578,"mtime":1702658046000,"results":"16","hashOfConfig":"10"},{"size":1224,"mtime":1703775324034,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j21q34",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"/workspace/3C-GRAFFIC/GrowthStage/src/index.js",[],[],"/workspace/3C-GRAFFIC/GrowthStage/src/App.js",["46","47"],[],"// App.js\n\nimport React from 'react';\nimport LineChart from './components/Line/Linechart';\nimport StartTimeChart from './components/Starttime/startime';\nimport CompletionRateChart from './components/Completion/CompletionRateChart'\nimport PausaStatusChart from './components/Pause/PausaStatusChart'\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <div>\n\n      <Navbar/>\n      <h1>Dashboard</h1>\n\n      {/* Gráfico de Linha (ASR Over Bases) */}\n      <LineChart />\n\n      {/* Gráfico de Barras (Start Time of Campaigns) */}\n      <StartTimeChart />\n\n      {/* Outros gráficos ou componentes podem ser adicionados aqui */}\n\n    </div>\n  );\n}\n\nexport default App;\n","/workspace/3C-GRAFFIC/GrowthStage/src/reportWebVitals.js",[],[],"/workspace/3C-GRAFFIC/GrowthStage/src/components/Line/Linechart.js",[],[],"/workspace/3C-GRAFFIC/GrowthStage/src/components/Starttime/startime.js",["48"],[],"// StartTimeChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\n\nfunction StartTimeChart() {\n  const [startTimeData, setStartTimeData] = useState([]);\n  const [startTimeChartData, setStartTimeChartData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchStartTimeData(pageSize = 10) {\n      try {\n        const apiToken = 'd0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq';\n\n        const response = await axios.get(`https://3c.fluxoti.com/api/v1/campaigns?paused=false&page=1&api_token=${apiToken}&per_page=${pageSize}`);\n\n        const data = response.data.data;\n\n        console.log('API Response Data for Start Time:', data);\n\n        const newStartTimeData = data.map((campaign) => ({\n          name: campaign.name,\n          start_time: campaign.start_time,\n        }));\n\n        console.log('Formatted Start Time Data:', newStartTimeData);\n\n        setStartTimeData(newStartTimeData);\n\n        const chartData = {\n          series: [\n            { name: 'Start Time', data: newStartTimeData.map((item) => item.start_time) },\n          ],\n          options: {\n            chart: {\n              height: 350,\n              type: 'bar',\n              foreColor: '#fff',  // White text color\n            },\n            xaxis: {\n              categories: newStartTimeData.map((item) => item.name),\n              labels: {\n                style: {\n                  colors: '#fff',  // White text color\n                },\n              },\n            },\n            yaxis: {\n              labels: {\n                style: {\n                  colors: '#fff',  // White text color\n                },\n              },\n            },\n            title: {\n              text: 'Start Time of Campaigns',\n              align: 'center',\n              style: {\n                color: '#fff',  // White text color\n              },\n            },\n            plotOptions: {\n              bar: {\n                colors: {\n                  ranges: [{\n                    from: 0,\n                    to: 100,\n                    color: '#ff0000',  // Red color for bars\n                  }],\n                },\n              },\n            },\n          },\n        };\n\n        console.log('Start Time Chart Data:', chartData);\n\n        setStartTimeChartData(chartData);\n      } catch (error) {\n        console.error('Error fetching start time data:', error);\n        setError('Error fetching start time data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchStartTimeData();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className='container-fluid mt-3 mb-3'>\n      <h2>Start Time of Campaigns</h2>\n      <Chart\n        options={startTimeChartData.options}\n        series={startTimeChartData.series}\n        type='bar'\n        height={350}\n      />\n    </div>\n  );\n}\n\nexport default StartTimeChart;\n","/workspace/3C-GRAFFIC/GrowthStage/src/components/Completion/CompletionRateChart.js",[],[],"/workspace/3C-GRAFFIC/GrowthStage/src/components/Pause/PausaStatusChart.js",["49"],[],"// PausaStatusChart.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from 'react-apexcharts';\n\nfunction PausaStatusChart() {\n  const [pausaStatusData, setPausaStatusData] = useState([]);\n  const [pausaStatusChartData, setPausaStatusChartData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchPausaStatusData() {\n      try {\n        const apiToken = 'd0NLCpTnvtsY1gQu7S38RyF47fOjnHknynBjGzWxCwpXOJqXaNwWDrGqFomq';\n\n        const response = await axios.get(`https://3c.fluxoti.com/api/v1/campaigns?paused=false&page=1&api_token=${apiToken}`);\n\n        const data = response.data.data;\n\n        console.log('API Response Data for Pausa Status:', data);\n\n        const newPausaStatusData = data.map((campaign) => ({\n          name: campaign.name,\n          paused: campaign.paused,\n        }));\n\n        console.log('Formatted Pausa Status Data:', newPausaStatusData);\n\n        setPausaStatusData(newPausaStatusData);\n\n        const pausedCount = newPausaStatusData.filter((item) => item.paused).length;\n        const activeCount = newPausaStatusData.length - pausedCount;\n\n        const chartData = {\n          series: [pausedCount, activeCount],\n          options: {\n            chart: {\n              type: 'donut',\n            },\n            labels: ['Pausada', 'Ativa'],\n            title: {\n              text: 'Status de Pausa das Campanhas',\n              align: 'center',\n            },\n            dataLabels: {\n              enabled: true,\n            },\n            plotOptions: {\n              pie: {\n                donut: {\n                  size: '70%',\n                },\n              },\n            },\n          },\n        };\n\n        console.log('Pausa Status Chart Data:', chartData);\n\n        setPausaStatusChartData(chartData);\n      } catch (error) {\n        console.error('Error fetching pausa status data:', error);\n        setError('Error fetching pausa status data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchPausaStatusData();\n  }, []);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>{error}</p>;\n  }\n\n  return (\n    <div className='container-fluid mt-3 mb-3'>\n      <h2>Status de Pausa das Campanhas</h2>\n      <Chart\n        options={pausaStatusChartData.options}\n        series={pausaStatusChartData.series}\n        type='donut'\n        height={350}\n      />\n    </div>\n  );\n}\n\nexport default PausaStatusChart;\n","/workspace/3C-GRAFFIC/GrowthStage/src/components/Navbar/index.js",["50","51","52","53","54"],[],"import { useState } from \"react\";\nimport \"tailwindcss/tailwind.css\";\nimport './Navbar.css'; // Import the CSS file for styling\n\nconst Navbar = () => {\n  const [active, setActive] = useState(\"Home\");\n  const [hovered, setHovered] = useState(false);\n\n  return (\n    <div className=\"navbarStyle\">\n      <div className=\"principalContent\">\n        <nav\n          className={`nav ${hovered ? 'hovered' : ''}`}\n          onMouseOver={() => setHovered(true)}\n          onMouseOut={() => setHovered(false)}\n        >\n          <ul className=\"nav-links\">\n            <div className=\"logo\">\n              <img src=\"https://github.com/ProgramingspaceT-800/3CDisc/blob/main/public/logo%20(1).png?raw=true\" alt=\"PH Negócios Plataforma\" style={{ width: '100px', height: 'auto', marginTop: '5%', marginBottom: '3%' }} />\n              <div className='link'>\n                <li><a href=\"/\">Bases</a></li>\n                <li className=\"center\"><a href=\"#\">Graficos</a></li>\n                <li className=\"upward\"><a href=\"#\">Adicionar</a></li>\n                <li className=\"forward\"><a href=\"#\">Update</a></li>\n              </div>\n            </div>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n",{"ruleId":"55","severity":1,"message":"56","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":27},{"ruleId":"55","severity":1,"message":"59","line":7,"column":8,"nodeType":"57","messageId":"58","endLine":7,"endColumn":24},{"ruleId":"55","severity":1,"message":"60","line":8,"column":10,"nodeType":"57","messageId":"58","endLine":8,"endColumn":23},{"ruleId":"55","severity":1,"message":"61","line":8,"column":10,"nodeType":"57","messageId":"58","endLine":8,"endColumn":25},{"ruleId":"55","severity":1,"message":"62","line":6,"column":10,"nodeType":"57","messageId":"58","endLine":6,"endColumn":16},{"ruleId":"55","severity":1,"message":"63","line":6,"column":18,"nodeType":"57","messageId":"58","endLine":6,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":22,"column":40,"nodeType":"66","endLine":22,"endColumn":52},{"ruleId":"64","severity":1,"message":"65","line":23,"column":40,"nodeType":"66","endLine":23,"endColumn":52},{"ruleId":"64","severity":1,"message":"65","line":24,"column":41,"nodeType":"66","endLine":24,"endColumn":53},"no-unused-vars","'CompletionRateChart' is defined but never used.","Identifier","unusedVar","'PausaStatusChart' is defined but never used.","'startTimeData' is assigned a value but never used.","'pausaStatusData' is assigned a value but never used.","'active' is assigned a value but never used.","'setActive' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]